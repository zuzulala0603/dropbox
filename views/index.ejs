<!DOCTYPE html>
<html lang="ko">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="/static/css/common.css" />
    <link rel="stylesheet" href="/static/css/all.css" />
    <link rel="stylesheet" href="/static/css/drag.css" />
    <link rel="stylesheet" href="/static/css/header.css" />
    <link rel="stylesheet" href="/static/css/intro.css" />
    <link rel="stylesheet" href="/static/css/dropbox.css" />
    <link rel="stylesheet" href="/static/css/upload.css" />
    <title>메인페이지</title>
  </head>
  <body>
    <i class="fas fa-plus" id="drag__icon"> </i>
    <section id="drag"></section>
    <section id="header"></section>
    <section id="intro" class="main"></section>
    <section id="upload" class="main" onclick="$('.file-upload-input').trigger( 'click' )">
      <!--  -->
      <div id="upload__user" class="file-upload-content">
        <img id="upload__user__img" class="file-upload-image" src="#" alt="user image" />
      </div>
      <div class="image-title-wrap">
        <div id="removeBtn" onclick="removeUpload()" class="remove-image">사진 바꾸기</div>
      </div>
      <!--  -->
    </section>
    <input id="upload__input" class="file-upload-input" type="file" onchange="readURL(this);" accept="image/*" />
    <section id="footer"></section>
    <!--  -->
    <div>Teachable Machine Image Model</div>
    <button type="button" onclick="predict()">예측</button>
    <div id="webcam-container"></div>
    <div id="label-container"></div>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js"></script>
    <script type="text/javascript">
      // More API functions here:
      // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image

      // the link to your model provided by Teachable Machine export panel
      const URL = "https://teachablemachine.withgoogle.com/models/Wtend12ON/";

      let model, webcam, labelContainer, maxPredictions;

      // Load the image model and setup the webcam
      async function init() {
        const modelURL = URL + "model.json";
        const metadataURL = URL + "metadata.json";

        // load the model and metadata
        // Refer to tmImage.loadFromFiles() in the API to support files from a file picker
        // or files from your local hard drive
        // Note: the pose library adds "tmImage" object to your window (window.tmImage)
        model = await tmImage.load(modelURL, metadataURL);
        maxPredictions = model.getTotalClasses();

        // Convenience function to setup a webcam
        /*         const flip = true; // whether to flip the webcam
        webcam = new tmImage.Webcam(200, 200, flip); // width, height, flip
        await webcam.setup(); // request access to the webcam
        await webcam.play();
        window.requestAnimationFrame(loop); */

        // append elements to the DOM
        /*         document.getElementById("webcam-container").appendChild(webcam.canvas);*/
        labelContainer = document.getElementById("label-container");
        for (let i = 0; i < maxPredictions; i++) {
          // and class labels
          labelContainer.appendChild(document.createElement("div"));
        }
        console.log("이닛이 완료?");
      }

      // run the webcam image through the image model
      async function predict() {
        let userImg = document.getElementById("img__upload__user");
        // predict can take in an image, video or canvas html element
        const prediction = await model.predict(userImg, false);
        for (let i = 0; i < maxPredictions; i++) {
          const classPrediction = prediction[i].className + ": " + prediction[i].probability.toFixed(2);
          labelContainer.childNodes[i].innerHTML = classPrediction;
        }
      }
    </script>

    <!--  -->
    <script class="jsbin" src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
    <script src="/static/js/common.js"></script>
    <script src="/static/js/var.js"></script>
    <script src="/static/js/dropbox.js"></script>
    <script src="/static/js/drag.js"></script>
    <script src="http://code.jquery.com/jquery-latest.min.js"></script>
  </body>
  <!-- LICENSE -->
  <!-- FOR IMG UPLOAD -->
  <!--   Copyright (c) 2020 by Aaron Vanston (https://codepen.io/aaronvanston/pen/yNYOXR)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
</html>
